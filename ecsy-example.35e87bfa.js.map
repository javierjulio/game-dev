{"mappings":"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","sources":["node_modules/ecsy/build/ecsy.module.js","src/ecsy-example/components/position.js","src/ecsy-example/components/motion.js","src/ecsy-example/index.js"],"sourcesContent":["/**\n * Return the name of a component\n * @param {Component} Component\n * @private\n */\nfunction getName(Component) {\n  return Component.name;\n}\n\n/**\n * Return a valid property name for the Component\n * @param {Component} Component\n * @private\n */\nfunction componentPropertyName(Component) {\n  return getName(Component);\n}\n\n/**\n * Get a key from a list of components\n * @param {Array(Component)} Components Array of components to generate the key\n * @private\n */\nfunction queryKey(Components) {\n  var names = [];\n  for (var n = 0; n < Components.length; n++) {\n    var T = Components[n];\n    if (typeof T === \"object\") {\n      var operator = T.operator === \"not\" ? \"!\" : T.operator;\n      names.push(operator + getName(T.Component));\n    } else {\n      names.push(getName(T));\n    }\n  }\n\n  return names.sort().join(\"-\");\n}\n\n// Detector for browser's \"window\"\nconst hasWindow = typeof window !== \"undefined\";\n\n// performance.now() \"polyfill\"\nconst now =\n  hasWindow && typeof window.performance !== \"undefined\"\n    ? performance.now.bind(performance)\n    : Date.now.bind(Date);\n\n/**\n * @private\n * @class EventDispatcher\n */\nclass EventDispatcher {\n  constructor() {\n    this._listeners = {};\n    this.stats = {\n      fired: 0,\n      handled: 0\n    };\n  }\n\n  /**\n   * Add an event listener\n   * @param {String} eventName Name of the event to listen\n   * @param {Function} listener Callback to trigger when the event is fired\n   */\n  addEventListener(eventName, listener) {\n    let listeners = this._listeners;\n    if (listeners[eventName] === undefined) {\n      listeners[eventName] = [];\n    }\n\n    if (listeners[eventName].indexOf(listener) === -1) {\n      listeners[eventName].push(listener);\n    }\n  }\n\n  /**\n   * Check if an event listener is already added to the list of listeners\n   * @param {String} eventName Name of the event to check\n   * @param {Function} listener Callback for the specified event\n   */\n  hasEventListener(eventName, listener) {\n    return (\n      this._listeners[eventName] !== undefined &&\n      this._listeners[eventName].indexOf(listener) !== -1\n    );\n  }\n\n  /**\n   * Remove an event listener\n   * @param {String} eventName Name of the event to remove\n   * @param {Function} listener Callback for the specified event\n   */\n  removeEventListener(eventName, listener) {\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var index = listenerArray.indexOf(listener);\n      if (index !== -1) {\n        listenerArray.splice(index, 1);\n      }\n    }\n  }\n\n  /**\n   * Dispatch an event\n   * @param {String} eventName Name of the event to dispatch\n   * @param {Entity} entity (Optional) Entity to emit\n   * @param {Component} component\n   */\n  dispatchEvent(eventName, entity, component) {\n    this.stats.fired++;\n\n    var listenerArray = this._listeners[eventName];\n    if (listenerArray !== undefined) {\n      var array = listenerArray.slice(0);\n\n      for (var i = 0; i < array.length; i++) {\n        array[i].call(this, entity, component);\n      }\n    }\n  }\n\n  /**\n   * Reset stats counters\n   */\n  resetCounters() {\n    this.stats.fired = this.stats.handled = 0;\n  }\n}\n\nclass Query {\n  /**\n   * @param {Array(Component)} Components List of types of components to query\n   */\n  constructor(Components, manager) {\n    this.Components = [];\n    this.NotComponents = [];\n\n    Components.forEach(component => {\n      if (typeof component === \"object\") {\n        this.NotComponents.push(component.Component);\n      } else {\n        this.Components.push(component);\n      }\n    });\n\n    if (this.Components.length === 0) {\n      throw new Error(\"Can't create a query without components\");\n    }\n\n    this.entities = [];\n\n    this.eventDispatcher = new EventDispatcher();\n\n    // This query is being used by a reactive system\n    this.reactive = false;\n\n    this.key = queryKey(Components);\n\n    // Fill the query with the existing entities\n    for (var i = 0; i < manager._entities.length; i++) {\n      var entity = manager._entities[i];\n      if (this.match(entity)) {\n        // @todo ??? this.addEntity(entity); => preventing the event to be generated\n        entity.queries.push(this);\n        this.entities.push(entity);\n      }\n    }\n  }\n\n  /**\n   * Add entity to this query\n   * @param {Entity} entity\n   */\n  addEntity(entity) {\n    entity.queries.push(this);\n    this.entities.push(entity);\n\n    this.eventDispatcher.dispatchEvent(Query.prototype.ENTITY_ADDED, entity);\n  }\n\n  /**\n   * Remove entity from this query\n   * @param {Entity} entity\n   */\n  removeEntity(entity) {\n    let index = this.entities.indexOf(entity);\n    if (~index) {\n      this.entities.splice(index, 1);\n\n      index = entity.queries.indexOf(this);\n      entity.queries.splice(index, 1);\n\n      this.eventDispatcher.dispatchEvent(\n        Query.prototype.ENTITY_REMOVED,\n        entity\n      );\n    }\n  }\n\n  match(entity) {\n    return (\n      entity.hasAllComponents(this.Components) &&\n      !entity.hasAnyComponents(this.NotComponents)\n    );\n  }\n\n  toJSON() {\n    return {\n      key: this.key,\n      reactive: this.reactive,\n      components: {\n        included: this.Components.map(C => C.name),\n        not: this.NotComponents.map(C => C.name)\n      },\n      numEntities: this.entities.length\n    };\n  }\n\n  /**\n   * Return stats for this query\n   */\n  stats() {\n    return {\n      numComponents: this.Components.length,\n      numEntities: this.entities.length\n    };\n  }\n}\n\nQuery.prototype.ENTITY_ADDED = \"Query#ENTITY_ADDED\";\nQuery.prototype.ENTITY_REMOVED = \"Query#ENTITY_REMOVED\";\nQuery.prototype.COMPONENT_CHANGED = \"Query#COMPONENT_CHANGED\";\n\nclass System {\n  canExecute() {\n    if (this._mandatoryQueries.length === 0) return true;\n\n    for (let i = 0; i < this._mandatoryQueries.length; i++) {\n      var query = this._mandatoryQueries[i];\n      if (query.entities.length === 0) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  constructor(world, attributes) {\n    this.world = world;\n    this.enabled = true;\n\n    // @todo Better naming :)\n    this._queries = {};\n    this.queries = {};\n\n    this.priority = 0;\n\n    // Used for stats\n    this.executeTime = 0;\n\n    if (attributes && attributes.priority) {\n      this.priority = attributes.priority;\n    }\n\n    this._mandatoryQueries = [];\n\n    this.initialized = true;\n\n    if (this.constructor.queries) {\n      for (var queryName in this.constructor.queries) {\n        var queryConfig = this.constructor.queries[queryName];\n        var Components = queryConfig.components;\n        if (!Components || Components.length === 0) {\n          throw new Error(\"'components' attribute can't be empty in a query\");\n        }\n        var query = this.world.entityManager.queryComponents(Components);\n        this._queries[queryName] = query;\n        if (queryConfig.mandatory === true) {\n          this._mandatoryQueries.push(query);\n        }\n        this.queries[queryName] = {\n          results: query.entities\n        };\n\n        // Reactive configuration added/removed/changed\n        var validEvents = [\"added\", \"removed\", \"changed\"];\n\n        const eventMapping = {\n          added: Query.prototype.ENTITY_ADDED,\n          removed: Query.prototype.ENTITY_REMOVED,\n          changed: Query.prototype.COMPONENT_CHANGED // Query.prototype.ENTITY_CHANGED\n        };\n\n        if (queryConfig.listen) {\n          validEvents.forEach(eventName => {\n            if (!this.execute) {\n              console.warn(\n                `System '${\n                  this.constructor.name\n                }' has defined listen events (${validEvents.join(\n                  \", \"\n                )}) for query '${queryName}' but it does not implement the 'execute' method.`\n              );\n            }\n\n            // Is the event enabled on this system's query?\n            if (queryConfig.listen[eventName]) {\n              let event = queryConfig.listen[eventName];\n\n              if (eventName === \"changed\") {\n                query.reactive = true;\n                if (event === true) {\n                  // Any change on the entity from the components in the query\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    entity => {\n                      // Avoid duplicates\n                      if (eventList.indexOf(entity) === -1) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                } else if (Array.isArray(event)) {\n                  let eventList = (this.queries[queryName][eventName] = []);\n                  query.eventDispatcher.addEventListener(\n                    Query.prototype.COMPONENT_CHANGED,\n                    (entity, changedComponent) => {\n                      // Avoid duplicates\n                      if (\n                        event.indexOf(changedComponent.constructor) !== -1 &&\n                        eventList.indexOf(entity) === -1\n                      ) {\n                        eventList.push(entity);\n                      }\n                    }\n                  );\n                }\n              } else {\n                let eventList = (this.queries[queryName][eventName] = []);\n\n                query.eventDispatcher.addEventListener(\n                  eventMapping[eventName],\n                  entity => {\n                    // @fixme overhead?\n                    if (eventList.indexOf(entity) === -1)\n                      eventList.push(entity);\n                  }\n                );\n              }\n            }\n          });\n        }\n      }\n    }\n  }\n\n  stop() {\n    this.executeTime = 0;\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  // @question rename to clear queues?\n  clearEvents() {\n    for (let queryName in this.queries) {\n      var query = this.queries[queryName];\n      if (query.added) {\n        query.added.length = 0;\n      }\n      if (query.removed) {\n        query.removed.length = 0;\n      }\n      if (query.changed) {\n        if (Array.isArray(query.changed)) {\n          query.changed.length = 0;\n        } else {\n          for (let name in query.changed) {\n            query.changed[name].length = 0;\n          }\n        }\n      }\n    }\n  }\n\n  toJSON() {\n    var json = {\n      name: this.constructor.name,\n      enabled: this.enabled,\n      executeTime: this.executeTime,\n      priority: this.priority,\n      queries: {}\n    };\n\n    if (this.constructor.queries) {\n      var queries = this.constructor.queries;\n      for (let queryName in queries) {\n        let query = this.queries[queryName];\n        let queryDefinition = queries[queryName];\n        let jsonQuery = (json.queries[queryName] = {\n          key: this._queries[queryName].key\n        });\n\n        jsonQuery.mandatory = queryDefinition.mandatory === true;\n        jsonQuery.reactive =\n          queryDefinition.listen &&\n          (queryDefinition.listen.added === true ||\n            queryDefinition.listen.removed === true ||\n            queryDefinition.listen.changed === true ||\n            Array.isArray(queryDefinition.listen.changed));\n\n        if (jsonQuery.reactive) {\n          jsonQuery.listen = {};\n\n          const methods = [\"added\", \"removed\", \"changed\"];\n          methods.forEach(method => {\n            if (query[method]) {\n              jsonQuery.listen[method] = {\n                entities: query[method].length\n              };\n            }\n          });\n        }\n      }\n    }\n\n    return json;\n  }\n}\n\nfunction Not(Component) {\n  return {\n    operator: \"not\",\n    Component: Component\n  };\n}\n\nclass SystemManager {\n  constructor(world) {\n    this._systems = [];\n    this._executeSystems = []; // Systems that have `execute` method\n    this.world = world;\n    this.lastExecutedSystem = null;\n  }\n\n  registerSystem(SystemClass, attributes) {\n    if (!(SystemClass.prototype instanceof System)) {\n      throw new Error(\n        `System '${SystemClass.name}' does not extends 'System' class`\n      );\n    }\n    if (this.getSystem(SystemClass) !== undefined) {\n      console.warn(`System '${SystemClass.name}' already registered.`);\n      return this;\n    }\n\n    var system = new SystemClass(this.world, attributes);\n    if (system.init) system.init(attributes);\n    system.order = this._systems.length;\n    this._systems.push(system);\n    if (system.execute) {\n      this._executeSystems.push(system);\n      this.sortSystems();\n    }\n    return this;\n  }\n\n  unregisterSystem(SystemClass) {\n    let system = this.getSystem(SystemClass);\n    if (system === undefined) {\n      console.warn(\n        `Can unregister system '${SystemClass.name}'. It doesn't exist.`\n      );\n      return this;\n    }\n\n    this._systems.splice(this._systems.indexOf(system), 1);\n\n    if (system.execute) {\n      this._executeSystems.splice(this._executeSystems.indexOf(system), 1);\n    }\n\n    // @todo Add system.unregister() call to free resources\n    return this;\n  }\n\n  sortSystems() {\n    this._executeSystems.sort((a, b) => {\n      return a.priority - b.priority || a.order - b.order;\n    });\n  }\n\n  getSystem(SystemClass) {\n    return this._systems.find(s => s instanceof SystemClass);\n  }\n\n  getSystems() {\n    return this._systems;\n  }\n\n  removeSystem(SystemClass) {\n    var index = this._systems.indexOf(SystemClass);\n    if (!~index) return;\n\n    this._systems.splice(index, 1);\n  }\n\n  executeSystem(system, delta, time) {\n    if (system.initialized) {\n      if (system.canExecute()) {\n        let startTime = now();\n        system.execute(delta, time);\n        system.executeTime = now() - startTime;\n        this.lastExecutedSystem = system;\n        system.clearEvents();\n      }\n    }\n  }\n\n  stop() {\n    this._executeSystems.forEach(system => system.stop());\n  }\n\n  execute(delta, time, forcePlay) {\n    this._executeSystems.forEach(\n      system =>\n        (forcePlay || system.enabled) && this.executeSystem(system, delta, time)\n    );\n  }\n\n  stats() {\n    var stats = {\n      numSystems: this._systems.length,\n      systems: {}\n    };\n\n    for (var i = 0; i < this._systems.length; i++) {\n      var system = this._systems[i];\n      var systemStats = (stats.systems[system.constructor.name] = {\n        queries: {},\n        executeTime: system.executeTime\n      });\n      for (var name in system.ctx) {\n        systemStats.queries[name] = system.ctx[name].stats();\n      }\n    }\n\n    return stats;\n  }\n}\n\nclass ObjectPool {\n  // @todo Add initial size\n  constructor(T, initialSize) {\n    this.freeList = [];\n    this.count = 0;\n    this.T = T;\n    this.isObjectPool = true;\n\n    var extraArgs = null;\n    if (arguments.length > 1) {\n      extraArgs = Array.prototype.slice.call(arguments);\n      extraArgs.shift();\n    }\n\n    this.createElement = extraArgs\n      ? () => {\n          return new T(...extraArgs);\n        }\n      : () => {\n          return new T();\n        };\n\n    if (typeof initialSize !== \"undefined\") {\n      this.expand(initialSize);\n    }\n  }\n\n  acquire() {\n    // Grow the list by 20%ish if we're out\n    if (this.freeList.length <= 0) {\n      this.expand(Math.round(this.count * 0.2) + 1);\n    }\n\n    var item = this.freeList.pop();\n\n    return item;\n  }\n\n  release(item) {\n    item.reset();\n    this.freeList.push(item);\n  }\n\n  expand(count) {\n    for (var n = 0; n < count; n++) {\n      this.freeList.push(this.createElement());\n    }\n    this.count += count;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return this.freeList.length;\n  }\n\n  totalUsed() {\n    return this.count - this.freeList.length;\n  }\n}\n\n/**\n * @private\n * @class QueryManager\n */\nclass QueryManager {\n  constructor(world) {\n    this._world = world;\n\n    // Queries indexed by a unique identifier for the components it has\n    this._queries = {};\n  }\n\n  onEntityRemoved(entity) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n      if (entity.queries.indexOf(query) !== -1) {\n        query.removeEntity(entity);\n      }\n    }\n  }\n\n  /**\n   * Callback when a component is added to an entity\n   * @param {Entity} entity Entity that just got the new component\n   * @param {Component} Component Component added to the entity\n   */\n  onEntityComponentAdded(entity, Component) {\n    // @todo Use bitmask for checking components?\n\n    // Check each indexed query to see if we need to add this entity to the list\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        ~query.entities.indexOf(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n\n      // Add the entity only if:\n      // Component is in the query\n      // and Entity has ALL the components of the query\n      // and Entity is not already in the query\n      if (\n        !~query.Components.indexOf(Component) ||\n        !query.match(entity) ||\n        ~query.entities.indexOf(entity)\n      )\n        continue;\n\n      query.addEntity(entity);\n    }\n  }\n\n  /**\n   * Callback when a component is removed from an entity\n   * @param {Entity} entity Entity to remove the component from\n   * @param {Component} Component Component to remove from the entity\n   */\n  onEntityComponentRemoved(entity, Component) {\n    for (var queryName in this._queries) {\n      var query = this._queries[queryName];\n\n      if (\n        !!~query.NotComponents.indexOf(Component) &&\n        !~query.entities.indexOf(entity) &&\n        query.match(entity)\n      ) {\n        query.addEntity(entity);\n        continue;\n      }\n\n      if (\n        !!~query.Components.indexOf(Component) &&\n        !!~query.entities.indexOf(entity) &&\n        !query.match(entity)\n      ) {\n        query.removeEntity(entity);\n        continue;\n      }\n    }\n  }\n\n  /**\n   * Get a query for the specified components\n   * @param {Component} Components Components that the query should have\n   */\n  getQuery(Components) {\n    var key = queryKey(Components);\n    var query = this._queries[key];\n    if (!query) {\n      this._queries[key] = query = new Query(Components, this._world);\n    }\n    return query;\n  }\n\n  /**\n   * Return some stats from this class\n   */\n  stats() {\n    var stats = {};\n    for (var queryName in this._queries) {\n      stats[queryName] = this._queries[queryName].stats();\n    }\n    return stats;\n  }\n}\n\nclass SystemStateComponent {}\n\nSystemStateComponent.isSystemStateComponent = true;\n\n/**\n * @private\n * @class EntityManager\n */\nclass EntityManager {\n  constructor(world) {\n    this.world = world;\n    this.componentsManager = world.componentsManager;\n\n    // All the entities in this instance\n    this._entities = [];\n\n    this._entitiesByNames = {};\n\n    this._queryManager = new QueryManager(this);\n    this.eventDispatcher = new EventDispatcher();\n    this._entityPool = new ObjectPool(\n      this.world.options.entityClass,\n      this.world.options.entityPoolSize\n    );\n\n    // Deferred deletion\n    this.entitiesWithComponentsToRemove = [];\n    this.entitiesToRemove = [];\n    this.deferredRemovalEnabled = true;\n  }\n\n  getEntityByName(name) {\n    return this._entitiesByNames[name];\n  }\n\n  /**\n   * Create a new entity\n   */\n  createEntity(name) {\n    var entity = this._entityPool.acquire();\n    entity.alive = true;\n    entity.name = name || \"\";\n    if (name) {\n      if (this._entitiesByNames[name]) {\n        console.warn(`Entity name '${name}' already exist`);\n      } else {\n        this._entitiesByNames[name] = entity;\n      }\n    }\n\n    entity._world = this;\n    this._entities.push(entity);\n    this.eventDispatcher.dispatchEvent(ENTITY_CREATED, entity);\n    return entity;\n  }\n\n  // COMPONENTS\n\n  /**\n   * Add a component to an entity\n   * @param {Entity} entity Entity where the component will be added\n   * @param {Component} Component Component to be added to the entity\n   * @param {Object} values Optional values to replace the default attributes\n   */\n  entityAddComponent(entity, Component, values) {\n    if (~entity._ComponentTypes.indexOf(Component)) {\n      // @todo Just on debug mode\n      console.warn(\n        \"Component type already exists on entity.\",\n        entity,\n        Component.name\n      );\n      return;\n    }\n\n    entity._ComponentTypes.push(Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents++;\n    }\n\n    var componentPool = this.world.componentsManager.getComponentsPool(\n      Component\n    );\n    var component = componentPool.acquire();\n\n    entity._components[Component.name] = component;\n\n    if (values) {\n      if (component.copy) {\n        component.copy(values);\n      } else {\n        for (var name in values) {\n          component[name] = values[name];\n        }\n      }\n    }\n\n    this._queryManager.onEntityComponentAdded(entity, Component);\n    this.world.componentsManager.componentAddedToEntity(Component);\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_ADDED, entity, Component);\n  }\n\n  /**\n   * Remove a component from an entity\n   * @param {Entity} entity Entity which will get removed the component\n   * @param {*} Component Component to remove from the entity\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  entityRemoveComponent(entity, Component, immediately) {\n    var index = entity._ComponentTypes.indexOf(Component);\n    if (!~index) return;\n\n    this.eventDispatcher.dispatchEvent(COMPONENT_REMOVE, entity, Component);\n\n    if (immediately) {\n      this._entityRemoveComponentSync(entity, Component, index);\n    } else {\n      if (entity._ComponentTypesToRemove.length === 0)\n        this.entitiesWithComponentsToRemove.push(entity);\n\n      entity._ComponentTypes.splice(index, 1);\n      entity._ComponentTypesToRemove.push(Component);\n\n      var componentName = getName(Component);\n      entity._componentsToRemove[componentName] =\n        entity._components[componentName];\n      delete entity._components[componentName];\n    }\n\n    // Check each indexed query to see if we need to remove it\n    this._queryManager.onEntityComponentRemoved(entity, Component);\n\n    if (Component.__proto__ === SystemStateComponent) {\n      entity.numStateComponents--;\n\n      // Check if the entity was a ghost waiting for the last system state component to be removed\n      if (entity.numStateComponents === 0 && !entity.alive) {\n        entity.remove();\n      }\n    }\n  }\n\n  _entityRemoveComponentSync(entity, Component, index) {\n    // Remove T listing on entity and property ref, then free the component.\n    entity._ComponentTypes.splice(index, 1);\n    var propName = componentPropertyName(Component);\n    var componentName = getName(Component);\n    var component = entity._components[componentName];\n    delete entity._components[componentName];\n    this.componentsManager._componentPool[propName].release(component);\n    this.world.componentsManager.componentRemovedFromEntity(Component);\n  }\n\n  /**\n   * Remove all the components from an entity\n   * @param {Entity} entity Entity from which the components will be removed\n   */\n  entityRemoveAllComponents(entity, immediately) {\n    let Components = entity._ComponentTypes;\n\n    for (let j = Components.length - 1; j >= 0; j--) {\n      if (Components[j].__proto__ !== SystemStateComponent)\n        this.entityRemoveComponent(entity, Components[j], immediately);\n    }\n  }\n\n  /**\n   * Remove the entity from this manager. It will clear also its components\n   * @param {Entity} entity Entity to remove from the manager\n   * @param {Bool} immediately If you want to remove the component immediately instead of deferred (Default is false)\n   */\n  removeEntity(entity, immediately) {\n    var index = this._entities.indexOf(entity);\n\n    if (!~index) throw new Error(\"Tried to remove entity not in list\");\n\n    entity.alive = false;\n\n    if (entity.numStateComponents === 0) {\n      // Remove from entity list\n      this.eventDispatcher.dispatchEvent(ENTITY_REMOVED, entity);\n      this._queryManager.onEntityRemoved(entity);\n      if (immediately === true) {\n        this._releaseEntity(entity, index);\n      } else {\n        this.entitiesToRemove.push(entity);\n      }\n    }\n\n    this.entityRemoveAllComponents(entity, immediately);\n  }\n\n  _releaseEntity(entity, index) {\n    this._entities.splice(index, 1);\n\n    if (this._entitiesByNames[entity.name]) {\n      delete this._entitiesByNames[entity.name];\n    }\n\n    // Prevent any access and free\n    entity._world = null;\n    this._entityPool.release(entity);\n  }\n\n  /**\n   * Remove all entities from this manager\n   */\n  removeAllEntities() {\n    for (var i = this._entities.length - 1; i >= 0; i--) {\n      this.removeEntity(this._entities[i]);\n    }\n  }\n\n  processDeferredRemoval() {\n    if (!this.deferredRemovalEnabled) {\n      return;\n    }\n\n    for (let i = 0; i < this.entitiesToRemove.length; i++) {\n      let entity = this.entitiesToRemove[i];\n      let index = this._entities.indexOf(entity);\n      this._releaseEntity(entity, index);\n    }\n    this.entitiesToRemove.length = 0;\n\n    for (let i = 0; i < this.entitiesWithComponentsToRemove.length; i++) {\n      let entity = this.entitiesWithComponentsToRemove[i];\n      while (entity._ComponentTypesToRemove.length > 0) {\n        let Component = entity._ComponentTypesToRemove.pop();\n\n        var propName = componentPropertyName(Component);\n        var componentName = getName(Component);\n        var component = entity._componentsToRemove[componentName];\n        delete entity._componentsToRemove[componentName];\n        this.componentsManager._componentPool[propName].release(component);\n        this.world.componentsManager.componentRemovedFromEntity(Component);\n\n        //this._entityRemoveComponentSync(entity, Component, index);\n      }\n    }\n\n    this.entitiesWithComponentsToRemove.length = 0;\n  }\n\n  /**\n   * Get a query based on a list of components\n   * @param {Array(Component)} Components List of components that will form the query\n   */\n  queryComponents(Components) {\n    return this._queryManager.getQuery(Components);\n  }\n\n  // EXTRAS\n\n  /**\n   * Return number of entities\n   */\n  count() {\n    return this._entities.length;\n  }\n\n  /**\n   * Return some stats\n   */\n  stats() {\n    var stats = {\n      numEntities: this._entities.length,\n      numQueries: Object.keys(this._queryManager._queries).length,\n      queries: this._queryManager.stats(),\n      numComponentPool: Object.keys(this.componentsManager._componentPool)\n        .length,\n      componentPool: {},\n      eventDispatcher: this.eventDispatcher.stats\n    };\n\n    for (var cname in this.componentsManager._componentPool) {\n      var pool = this.componentsManager._componentPool[cname];\n      stats.componentPool[cname] = {\n        used: pool.totalUsed(),\n        size: pool.count\n      };\n    }\n\n    return stats;\n  }\n}\n\nconst ENTITY_CREATED = \"EntityManager#ENTITY_CREATE\";\nconst ENTITY_REMOVED = \"EntityManager#ENTITY_REMOVED\";\nconst COMPONENT_ADDED = \"EntityManager#COMPONENT_ADDED\";\nconst COMPONENT_REMOVE = \"EntityManager#COMPONENT_REMOVE\";\n\nclass DummyObjectPool {\n  constructor(T) {\n    this.isDummyObjectPool = true;\n    this.count = 0;\n    this.used = 0;\n    this.T = T;\n  }\n\n  acquire() {\n    this.used++;\n    this.count++;\n    return new this.T();\n  }\n\n  release() {\n    this.used--;\n  }\n\n  totalSize() {\n    return this.count;\n  }\n\n  totalFree() {\n    return Infinity;\n  }\n\n  totalUsed() {\n    return this.used;\n  }\n}\n\nclass ComponentManager {\n  constructor() {\n    this.Components = {};\n    this._componentPool = {};\n    this.numComponents = {};\n  }\n\n  registerComponent(Component) {\n    if (this.Components[Component.name]) {\n      console.warn(`Component type: '${Component.name}' already registered.`);\n      return;\n    }\n\n    this.Components[Component.name] = Component;\n    this.numComponents[Component.name] = 0;\n  }\n\n  componentAddedToEntity(Component) {\n    if (!this.Components[Component.name]) {\n      this.registerComponent(Component);\n    }\n\n    this.numComponents[Component.name]++;\n  }\n\n  componentRemovedFromEntity(Component) {\n    this.numComponents[Component.name]--;\n  }\n\n  getComponentsPool(Component) {\n    var componentName = componentPropertyName(Component);\n\n    if (!this._componentPool[componentName]) {\n      if (Component.prototype.reset) {\n        this._componentPool[componentName] = new ObjectPool(Component);\n      } else {\n        console.warn(\n          `Component '${Component.name}' won't benefit from pooling because 'reset' method was not implemented.`\n        );\n        this._componentPool[componentName] = new DummyObjectPool(Component);\n      }\n    }\n\n    return this._componentPool[componentName];\n  }\n}\n\nvar name = \"ecsy\";\nvar version = \"0.2.5\";\nvar description = \"Entity Component System in JS\";\nvar main = \"build/ecsy.js\";\nvar module = \"build/ecsy.module.js\";\nvar types = \"src/index.d.ts\";\nvar scripts = {\n\tbuild: \"rollup -c && npm run docs\",\n\tdocs: \"rm docs/api/_sidebar.md; typedoc --readme none --mode file --excludeExternals --plugin typedoc-plugin-markdown  --theme docs/theme --hideSources --hideBreadcrumbs --out docs/api/ --includeDeclarations --includes 'src/**/*.d.ts' src; touch docs/api/_sidebar.md\",\n\t\"dev:docs\": \"nodemon -e ts -x 'npm run docs' -w src\",\n\tdev: \"concurrently --names 'ROLLUP,DOCS,HTTP' -c 'bgBlue.bold,bgYellow.bold,bgGreen.bold' 'rollup -c -w -m inline' 'npm run dev:docs' 'npm run dev:server'\",\n\t\"dev:server\": \"http-server -c-1 -p 8080 --cors\",\n\tlint: \"eslint src test examples\",\n\tstart: \"npm run dev\",\n\ttest: \"ava\",\n\ttravis: \"npm run lint && npm run test && npm run build\",\n\t\"watch:test\": \"ava --watch\"\n};\nvar repository = {\n\ttype: \"git\",\n\turl: \"git+https://github.com/fernandojsg/ecsy.git\"\n};\nvar keywords = [\n\t\"ecs\",\n\t\"entity component system\"\n];\nvar author = \"Fernando Serrano <fernandojsg@gmail.com> (http://fernandojsg.com)\";\nvar license = \"MIT\";\nvar bugs = {\n\turl: \"https://github.com/fernandojsg/ecsy/issues\"\n};\nvar ava = {\n\tfiles: [\n\t\t\"test/**/*.test.js\"\n\t],\n\tsources: [\n\t\t\"src/**/*.js\"\n\t],\n\trequire: [\n\t\t\"babel-register\",\n\t\t\"esm\"\n\t]\n};\nvar jspm = {\n\tfiles: [\n\t\t\"package.json\",\n\t\t\"LICENSE\",\n\t\t\"README.md\",\n\t\t\"build/ecsy.js\",\n\t\t\"build/ecsy.min.js\",\n\t\t\"build/ecsy.module.js\"\n\t],\n\tdirectories: {\n\t}\n};\nvar homepage = \"https://github.com/fernandojsg/ecsy#readme\";\nvar devDependencies = {\n\tava: \"^1.4.1\",\n\t\"babel-cli\": \"^6.26.0\",\n\t\"babel-core\": \"^6.26.3\",\n\t\"babel-eslint\": \"^10.0.3\",\n\t\"babel-loader\": \"^8.0.6\",\n\tconcurrently: \"^4.1.2\",\n\t\"docsify-cli\": \"^4.4.0\",\n\teslint: \"^5.16.0\",\n\t\"eslint-config-prettier\": \"^4.3.0\",\n\t\"eslint-plugin-prettier\": \"^3.1.2\",\n\t\"http-server\": \"^0.11.1\",\n\tnodemon: \"^1.19.4\",\n\tprettier: \"^1.19.1\",\n\trollup: \"^1.29.0\",\n\t\"rollup-plugin-json\": \"^4.0.0\",\n\t\"rollup-plugin-terser\": \"^5.2.0\",\n\ttypedoc: \"^0.15.8\",\n\t\"typedoc-plugin-markdown\": \"^2.2.16\",\n\ttypescript: \"^3.7.5\"\n};\nvar pjson = {\n\tname: name,\n\tversion: version,\n\tdescription: description,\n\tmain: main,\n\t\"jsnext:main\": \"build/ecsy.module.js\",\n\tmodule: module,\n\ttypes: types,\n\tscripts: scripts,\n\trepository: repository,\n\tkeywords: keywords,\n\tauthor: author,\n\tlicense: license,\n\tbugs: bugs,\n\tava: ava,\n\tjspm: jspm,\n\thomepage: homepage,\n\tdevDependencies: devDependencies\n};\n\nconst Version = pjson.version;\n\nvar nextId = 0;\n\nclass Entity {\n  constructor(world) {\n    this._world = world || null;\n\n    // Unique ID for this entity\n    this.id = nextId++;\n\n    // List of components types the entity has\n    this._ComponentTypes = [];\n\n    // Instance of the components\n    this._components = {};\n\n    this._componentsToRemove = {};\n\n    // Queries where the entity is added\n    this.queries = [];\n\n    // Used for deferred removal\n    this._ComponentTypesToRemove = [];\n\n    this.alive = false;\n\n    //if there are state components on a entity, it can't be removed completely\n    this.numStateComponents = 0;\n  }\n\n  // COMPONENTS\n\n  getComponent(Component, includeRemoved) {\n    var component = this._components[Component.name];\n\n    if (!component && includeRemoved === true) {\n      component = this._componentsToRemove[Component.name];\n    }\n\n    return  component;\n  }\n\n  getRemovedComponent(Component) {\n    return this._componentsToRemove[Component.name];\n  }\n\n  getComponents() {\n    return this._components;\n  }\n\n  getComponentsToRemove() {\n    return this._componentsToRemove;\n  }\n\n  getComponentTypes() {\n    return this._ComponentTypes;\n  }\n\n  getMutableComponent(Component) {\n    var component = this._components[Component.name];\n    for (var i = 0; i < this.queries.length; i++) {\n      var query = this.queries[i];\n      // @todo accelerate this check. Maybe having query._Components as an object\n      // @todo add Not components\n      if (query.reactive && query.Components.indexOf(Component) !== -1) {\n        query.eventDispatcher.dispatchEvent(\n          Query.prototype.COMPONENT_CHANGED,\n          this,\n          component\n        );\n      }\n    }\n    return component;\n  }\n\n  addComponent(Component, values) {\n    this._world.entityAddComponent(this, Component, values);\n    return this;\n  }\n\n  removeComponent(Component, forceImmediate) {\n    this._world.entityRemoveComponent(this, Component, forceImmediate);\n    return this;\n  }\n\n  hasComponent(Component, includeRemoved) {\n    return (\n      !!~this._ComponentTypes.indexOf(Component) ||\n      (includeRemoved === true && this.hasRemovedComponent(Component))\n    );\n  }\n\n  hasRemovedComponent(Component) {\n    return !!~this._ComponentTypesToRemove.indexOf(Component);\n  }\n\n  hasAllComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (!this.hasComponent(Components[i])) return false;\n    }\n    return true;\n  }\n\n  hasAnyComponents(Components) {\n    for (var i = 0; i < Components.length; i++) {\n      if (this.hasComponent(Components[i])) return true;\n    }\n    return false;\n  }\n\n  removeAllComponents(forceImmediate) {\n    return this._world.entityRemoveAllComponents(this, forceImmediate);\n  }\n\n  // EXTRAS\n\n  // Initialize the entity. To be used when returning an entity to the pool\n  reset() {\n    this.id = nextId++;\n    this._world = null;\n    this._ComponentTypes.length = 0;\n    this.queries.length = 0;\n    this._components = {};\n  }\n\n  remove(forceImmediate) {\n    return this._world.removeEntity(this, forceImmediate);\n  }\n}\n\nconst DEFAULT_OPTIONS = {\n  entityPoolSize: 0,\n  entityClass: Entity\n};\n\nclass World {\n  constructor(options = {}) {\n    this.options = Object.assign({}, DEFAULT_OPTIONS, options);\n\n    this.componentsManager = new ComponentManager(this);\n    this.entityManager = new EntityManager(this);\n    this.systemManager = new SystemManager(this);\n\n    this.enabled = true;\n\n    this.eventQueues = {};\n\n    if (hasWindow && typeof CustomEvent !== \"undefined\") {\n      var event = new CustomEvent(\"ecsy-world-created\", {\n        detail: { world: this, version: Version }\n      });\n      window.dispatchEvent(event);\n    }\n\n    this.lastTime = now();\n  }\n\n  registerComponent(Component) {\n    this.componentsManager.registerComponent(Component);\n    return this;\n  }\n\n  registerSystem(System, attributes) {\n    this.systemManager.registerSystem(System, attributes);\n    return this;\n  }\n\n  unregisterSystem(System) {\n    this.systemManager.unregisterSystem(System);\n    return this;\n  }\n\n  getSystem(SystemClass) {\n    return this.systemManager.getSystem(SystemClass);\n  }\n\n  getSystems() {\n    return this.systemManager.getSystems();\n  }\n\n  execute(delta, time) {\n    if (!delta) {\n      time = now();\n      delta = time - this.lastTime;\n      this.lastTime = time;\n    }\n\n    if (this.enabled) {\n      this.systemManager.execute(delta, time);\n      this.entityManager.processDeferredRemoval();\n    }\n  }\n\n  stop() {\n    this.enabled = false;\n  }\n\n  play() {\n    this.enabled = true;\n  }\n\n  createEntity(name) {\n    return this.entityManager.createEntity(name);\n  }\n\n  stats() {\n    var stats = {\n      entities: this.entityManager.stats(),\n      system: this.systemManager.stats()\n    };\n\n    console.log(JSON.stringify(stats, null, 2));\n  }\n}\n\nclass Component {}\n\nComponent.isComponent = true;\n\nclass TagComponent {\n  reset() {}\n}\n\nTagComponent.isTagComponent = true;\n\nfunction createType(typeDefinition) {\n  var mandatoryFunctions = [\n    \"create\",\n    \"reset\",\n    \"clear\"\n    /*\"copy\"*/\n  ];\n\n  var undefinedFunctions = mandatoryFunctions.filter(f => {\n    return !typeDefinition[f];\n  });\n\n  if (undefinedFunctions.length > 0) {\n    throw new Error(\n      `createType expect type definition to implements the following functions: ${undefinedFunctions.join(\n        \", \"\n      )}`\n    );\n  }\n\n  typeDefinition.isType = true;\n  return typeDefinition;\n}\n\n/**\n * Standard types\n */\nvar Types = {};\n\nTypes.Number = createType({\n  baseType: Number,\n  isSimpleType: true,\n  create: defaultValue => {\n    return typeof defaultValue !== \"undefined\" ? defaultValue : 0;\n  },\n  reset: (src, key, defaultValue) => {\n    if (typeof defaultValue !== \"undefined\") {\n      src[key] = defaultValue;\n    } else {\n      src[key] = 0;\n    }\n  },\n  clear: (src, key) => {\n    src[key] = 0;\n  }\n});\n\nTypes.Boolean = createType({\n  baseType: Boolean,\n  isSimpleType: true,\n  create: defaultValue => {\n    return typeof defaultValue !== \"undefined\" ? defaultValue : false;\n  },\n  reset: (src, key, defaultValue) => {\n    if (typeof defaultValue !== \"undefined\") {\n      src[key] = defaultValue;\n    } else {\n      src[key] = false;\n    }\n  },\n  clear: (src, key) => {\n    src[key] = false;\n  }\n});\n\nTypes.String = createType({\n  baseType: String,\n  isSimpleType: true,\n  create: defaultValue => {\n    return typeof defaultValue !== \"undefined\" ? defaultValue : \"\";\n  },\n  reset: (src, key, defaultValue) => {\n    if (typeof defaultValue !== \"undefined\") {\n      src[key] = defaultValue;\n    } else {\n      src[key] = \"\";\n    }\n  },\n  clear: (src, key) => {\n    src[key] = \"\";\n  }\n});\n\nTypes.Array = createType({\n  baseType: Array,\n  create: defaultValue => {\n    if (typeof defaultValue !== \"undefined\") {\n      return defaultValue.slice();\n    }\n\n    return [];\n  },\n  reset: (src, key, defaultValue) => {\n    if (typeof defaultValue !== \"undefined\") {\n      src[key] = defaultValue.slice();\n    } else {\n      src[key].length = 0;\n    }\n  },\n  clear: (src, key) => {\n    src[key].length = 0;\n  },\n  copy: (src, dst, key) => {\n    src[key] = dst[key].slice();\n  }\n});\n\nvar standardTypes = {\n  number: Types.Number,\n  boolean: Types.Boolean,\n  string: Types.String\n};\n\n/**\n * Try to infer the type of the value\n * @param {*} value\n * @return {String} Type of the attribute\n * @private\n */\nfunction inferType(value) {\n  if (Array.isArray(value)) {\n    return Types.Array;\n  }\n\n  if (standardTypes[typeof value]) {\n    return standardTypes[typeof value];\n  } else {\n    return null;\n  }\n}\n\nfunction createComponentClass(schema, name) {\n  //var Component = new Function(`return function ${name}() {}`)();\n  for (let key in schema) {\n    let type = schema[key].type;\n    if (!type) {\n      schema[key].type = inferType(schema[key].default);\n    }\n  }\n\n  var Component = function() {\n    for (let key in schema) {\n      var attr = schema[key];\n      let type = attr.type;\n      if (type && type.isType) {\n        this[key] = type.create(attr.default);\n      } else {\n        this[key] = attr.default;\n      }\n    }\n  };\n\n  if (typeof name !== \"undefined\") {\n    Object.defineProperty(Component, \"name\", { value: name });\n  }\n\n  Component.prototype.schema = schema;\n\n  var knownTypes = true;\n  for (let key in schema) {\n    var attr = schema[key];\n    if (!attr.type) {\n      attr.type = inferType(attr.default);\n    }\n\n    var type = attr.type;\n    if (!type) {\n      console.warn(`Unknown type definition for attribute '${key}'`);\n      knownTypes = false;\n    }\n  }\n\n  if (!knownTypes) {\n    console.warn(\n      `This component can't use pooling because some data types are not registered. Please provide a type created with 'createType'`\n    );\n\n    for (var key in schema) {\n      let attr = schema[key];\n      Component.prototype[key] = attr.default;\n    }\n  } else {\n    Component.prototype.copy = function(src) {\n      for (let key in schema) {\n        if (src[key]) {\n          let type = schema[key].type;\n          if (type.isSimpleType) {\n            this[key] = src[key];\n          } else if (type.copy) {\n            type.copy(this, src, key);\n          } else {\n            // @todo Detect that it's not possible to copy all the attributes\n            // and just avoid creating the copy function\n            console.warn(\n              `Unknown copy function for attribute '${key}' data type`\n            );\n          }\n        }\n      }\n    };\n\n    Component.prototype.reset = function() {\n      for (let key in schema) {\n        let attr = schema[key];\n        let type = attr.type;\n        if (type.reset) type.reset(this, key, attr.default);\n      }\n    };\n\n    Component.prototype.clear = function() {\n      for (let key in schema) {\n        let type = schema[key].type;\n        if (type.clear) type.clear(this, key);\n      }\n    };\n\n    for (let key in schema) {\n      let attr = schema[key];\n      let type = attr.type;\n      Component.prototype[key] = attr.default;\n\n      if (type.reset) {\n        type.reset(Component.prototype, key, attr.default);\n      }\n    }\n  }\n\n  return Component;\n}\n\nfunction generateId(length) {\n  var result = \"\";\n  var characters = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789\";\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n\nfunction injectScript(src, onLoad) {\n  var script = document.createElement(\"script\");\n  // @todo Use link to the ecsy-devtools repo?\n  script.src = src;\n  script.onload = onLoad;\n  (document.head || document.documentElement).appendChild(script);\n}\n\n/* global Peer */\n\nfunction hookConsoleAndErrors(connection) {\n  var wrapFunctions = [\"error\", \"warning\", \"log\"];\n  wrapFunctions.forEach(key => {\n    if (typeof console[key] === \"function\") {\n      var fn = console[key].bind(console);\n      console[key] = (...args) => {\n        connection.send({\n          method: \"console\",\n          type: key,\n          args: JSON.stringify(args)\n        });\n        return fn.apply(null, args);\n      };\n    }\n  });\n\n  window.addEventListener(\"error\", error => {\n    connection.send({\n      method: \"error\",\n      error: JSON.stringify({\n        message: error.error.message,\n        stack: error.error.stack\n      })\n    });\n  });\n}\n\nfunction includeRemoteIdHTML(remoteId) {\n  let infoDiv = document.createElement(\"div\");\n  infoDiv.style.cssText = `\n    align-items: center;\n    background-color: #333;\n    color: #aaa;\n    display:flex;\n    font-family: Arial;\n    font-size: 1.1em;\n    height: 40px;\n    justify-content: center;\n    left: 0;\n    opacity: 0.9;\n    position: absolute;\n    right: 0;\n    text-align: center;\n    top: 0;\n  `;\n\n  infoDiv.innerHTML = `Open ECSY devtools to connect to this page using the code:&nbsp;<b style=\"color: #fff\">${remoteId}</b>&nbsp;<button onClick=\"generateNewCode()\">Generate new code</button>`;\n  document.body.appendChild(infoDiv);\n\n  return infoDiv;\n}\n\nfunction enableRemoteDevtools(remoteId) {\n  if (!hasWindow) {\n    console.warn(\"Remote devtools not available outside the browser\");\n    return;\n  }\n\n  window.generateNewCode = () => {\n    window.localStorage.clear();\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n    window.location.reload(false);\n  };\n\n  remoteId = remoteId || window.localStorage.getItem(\"ecsyRemoteId\");\n  if (!remoteId) {\n    remoteId = generateId(6);\n    window.localStorage.setItem(\"ecsyRemoteId\", remoteId);\n  }\n\n  let infoDiv = includeRemoteIdHTML(remoteId);\n\n  window.__ECSY_REMOTE_DEVTOOLS_INJECTED = true;\n  window.__ECSY_REMOTE_DEVTOOLS = {};\n\n  let Version = \"\";\n\n  // This is used to collect the worlds created before the communication is being established\n  let worldsBeforeLoading = [];\n  let onWorldCreated = e => {\n    var world = e.detail.world;\n    Version = e.detail.version;\n    worldsBeforeLoading.push(world);\n  };\n  window.addEventListener(\"ecsy-world-created\", onWorldCreated);\n\n  let onLoaded = () => {\n    var peer = new Peer(remoteId);\n    peer.on(\"open\", (/* id */) => {\n      peer.on(\"connection\", connection => {\n        window.__ECSY_REMOTE_DEVTOOLS.connection = connection;\n        connection.on(\"open\", function() {\n          // infoDiv.style.visibility = \"hidden\";\n          infoDiv.innerHTML = \"Connected\";\n\n          // Receive messages\n          connection.on(\"data\", function(data) {\n            if (data.type === \"init\") {\n              var script = document.createElement(\"script\");\n              script.setAttribute(\"type\", \"text/javascript\");\n              script.onload = () => {\n                script.parentNode.removeChild(script);\n\n                // Once the script is injected we don't need to listen\n                window.removeEventListener(\n                  \"ecsy-world-created\",\n                  onWorldCreated\n                );\n                worldsBeforeLoading.forEach(world => {\n                  var event = new CustomEvent(\"ecsy-world-created\", {\n                    detail: { world: world, version: Version }\n                  });\n                  window.dispatchEvent(event);\n                });\n              };\n              script.innerHTML = data.script;\n              (document.head || document.documentElement).appendChild(script);\n              script.onload();\n\n              hookConsoleAndErrors(connection);\n            } else if (data.type === \"executeScript\") {\n              let value = eval(data.script);\n              if (data.returnEval) {\n                connection.send({\n                  method: \"evalReturn\",\n                  value: value\n                });\n              }\n            }\n          });\n        });\n      });\n    });\n  };\n\n  // Inject PeerJS script\n  injectScript(\n    \"https://cdn.jsdelivr.net/npm/peerjs@0.3.20/dist/peer.min.js\",\n    onLoaded\n  );\n}\n\nif (hasWindow) {\n  const urlParams = new URLSearchParams(window.location.search);\n\n  // @todo Provide a way to disable it if needed\n  if (urlParams.has(\"enable-remote-devtools\")) {\n    enableRemoteDevtools();\n  }\n}\n\nexport { Component, Not, System, SystemStateComponent, TagComponent, Types, Version, World, Entity as _Entity, createComponentClass, createType, enableRemoteDevtools };\n","import { createComponentClass } from \"ecsy\";\n\nexport const Position = createComponentClass({\n  x: { default: 0 },\n  y: { default: 0 },\n  rotation: { default: 0 }\n}, \"Position\");\n","import { createComponentClass } from \"ecsy\";\n\nexport const Motion = createComponentClass({\n  x: { default: 0 },\n  y: { default: 0 },\n  angularVelocity: { default: 0 },\n  damping: { default: 0 }\n}, \"Motion\");\n","import { World, System, TagComponent } from \"ecsy\";\nimport { Position } from \"./components/position\";\nimport { Motion } from \"./components/motion\";\n\nconst NUM_ELEMENTS = 4;\nconst SPEED_MULTIPLIER = 0.1;\nconst SHAPE_SIZE = 20;\nconst SHAPE_HALF_SIZE = SHAPE_SIZE / 2;\n\n// Initialize canvas\nlet canvas = document.querySelector(\"canvas\");\nlet canvasWidth = canvas.width = window.innerWidth;\nlet canvasHeight = canvas.height = window.innerHeight;\nlet ctx = canvas.getContext(\"2d\");\n//----------------------\n// Components\n//----------------------\n\n// drawSpaceship(position) {\n//   ctx.save();\n//   ctx.translate(position.x >> 0, position.y >> 0);\n//   // ctx.rotate(ship.angle);\n//   ctx.strokeStyle = '#000';\n//   // ctx.lineWidth = (Math.random() > 0.9) ? 2 : 1;\n//   ctx.beginPath();\n//   ctx.moveTo(10, 0);\n//   ctx.lineTo(-10, -10);\n//   ctx.lineTo(-10, 10);\n//   ctx.lineTo(10, 0);\n//   ctx.stroke();\n//   ctx.closePath();\n//   ctx.restore();\n// }\n\n// Velocity component\n// class Velocity {\n//   constructor() {\n//     this.x = this.y = 0;\n//   }\n// }\n\n// Shape component\nclass Shape {\n  constructor() {\n    this.primitive = 'box';\n  }\n}\n\n// Renderable component\nclass Renderable extends TagComponent {}\n\n//----------------------\n// Systems\n//----------------------\n\n// MovableSystem\nclass MovableSystem extends System {\n  // This method will get called on every frame by default\n  execute(delta, time) {\n    // Iterate through all the entities on the query\n    this.queries.moving.results.forEach(entity => {\n      var motion = entity.getComponent(Motion);\n      var position = entity.getMutableComponent(Position);\n      position.x += motion.x * delta;\n      position.y += motion.y * delta;\n      position.rotation += motion.angularVelocity * delta;\n      console.log(position.rotation, motion.angularVelocity)\n\n      if (position.x > canvasWidth + SHAPE_HALF_SIZE) position.x = - SHAPE_HALF_SIZE;\n      if (position.x < - SHAPE_HALF_SIZE) position.x = canvasWidth + SHAPE_HALF_SIZE;\n      if (position.y > canvasHeight + SHAPE_HALF_SIZE) position.y = - SHAPE_HALF_SIZE;\n      if (position.y < - SHAPE_HALF_SIZE) position.y = canvasHeight + SHAPE_HALF_SIZE;\n    });\n  }\n}\n// Define a query of entities that have \"Velocity\" and \"Position\" components\nMovableSystem.queries = {\n  moving: {\n    components: [Motion, Position]\n  }\n}\n// RendererSystem\nclass RendererSystem extends System {\n  // This method will get called on every frame by default\n  execute(delta, time) {\n\n    ctx.globalAlpha = 1;\n    ctx.fillStyle = \"#ffffff\";\n    ctx.fillRect(0, 0, canvasWidth, canvasHeight);\n    //ctx.globalAlpha = 0.6;\n\n    // Iterate through all the entities on the query\n    this.queries.renderables.results.forEach(entity => {\n      var shape = entity.getComponent(Shape);\n      var position = entity.getComponent(Position);\n      // var motion = entity.getComponent(Motion);\n      if (shape.primitive === 'box') {\n        // this.drawBox(position);\n        this.drawBox(position);\n      } else {\n        // this.drawCircle(position);\n        this.drawSpaceship(position)\n      }\n    });\n  }\n\n  drawSpaceship(position) {\n    ctx.save();\n    ctx.translate(position.x >> 0, position.y >> 0);\n    ctx.rotate(position.rotation * 180 / Math.PI);\n    ctx.strokeStyle = '#000';\n    // ctx.lineWidth = (Math.random() > 0.9) ? 2 : 1;\n    ctx.beginPath();\n    ctx.moveTo(10, 0);\n    ctx.lineTo(-10, -10);\n    ctx.lineTo(-10, 10);\n    ctx.lineTo(10, 0);\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n\n  drawCircle(position) {\n    ctx.fillStyle = \"#888\";\n    ctx.beginPath();\n    ctx.arc(position.x, position.y, SHAPE_HALF_SIZE, 0, 2 * Math.PI, false);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#222\";\n    ctx.stroke();\n  }\n\n  drawBox(position) {\n    // ctx.save();\n    // ctx.beginPath();\n    // // ctx.lineWidth = (Math.random() > 0.2) ? 4 : 3;\n    // ctx.strokeStyle = \"#000\";\n    // var j = 7// (Math.random() * 2 + 7) >> 0;\n    // var sides = j;\n    // let doublePI = Math.PI * 2;\n    // let angle = 0\n    // let radius = 30\n    // ctx.translate(position.x + radius / 2, position.y + radius / 2);\n    // ctx.rotate(position.rotation * 180 / Math.PI);\n    // ctx.translate(-(position.x + radius / 2), -(position.y + radius / 2));\n    // ctx.fillStyle= \"#000\";\n    // ctx.moveTo((position.x + Math.cos(doublePI * (j / sides) + angle) * radius) >> 0, (position.y + Math.sin(doublePI * (j / sides) + angle) * radius) >> 0);\n\n    // for(j; j > -1; --j) {\n    //   ctx.lineTo(\n    //     (position.x + Math.cos(doublePI * (j / sides) + angle) * radius) >> 0,\n    //     (position.y + Math.sin(doublePI * (j / sides) + angle) * radius) >> 0\n    //   )\n    // }\n\n    // ctx.fill();\n    // ctx.stroke();\n    // ctx.closePath();\n    // ctx.restore();\n    // return;\n\n// let angle = 0\n// let radius = 30\n// ctx.save();\n// ctx.beginPath();\n// ctx.translate(position.x >> 0, position.y >> 0);\n// ctx.fillStyle= \"#000\";\n// ctx.moveTo(radius, 0);\n// while( angle < Math.PI * 2 ) {\n//   var length = ( 0.75 + Math.random() * 0.25 ) * radius;\n//   var posX = Math.cos( angle ) * length;\n//   var posY = Math.sin( angle ) * length;\n//   ctx.lineTo(posX, posY);\n//   angle += Math.random() * 0.5;\n// }\n// ctx.lineTo( radius, 0 );\n// ctx.fill();\n// ctx.closePath();\n// ctx.restore();\n// return;\n\n    ctx.save();\n    ctx.beginPath();\n    // //Set the origin to the center of the object\n    ctx.translate(position.x + SHAPE_SIZE / 2, position.y + SHAPE_SIZE / 2);\n    ctx.rotate(position.rotation * 180 / Math.PI);\n    ctx.translate(-position.x - SHAPE_SIZE / 2, -position.y - SHAPE_SIZE / 2);\n    ctx.fillStyle= \"#f28d89\";\n    ctx.rect(position.x - SHAPE_HALF_SIZE, position.y - SHAPE_HALF_SIZE, SHAPE_SIZE, SHAPE_SIZE);\n    ctx.fill();\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = \"#800904\";\n    ctx.stroke();\n    ctx.closePath();\n    ctx.restore();\n  }\n}\n\n// Define a query of entities that have \"Renderable\" and \"Shape\" components\nRendererSystem.queries = {\n  renderables: { components: [Renderable, Shape] }\n}\n\n// Create world and register the systems on it\nvar world = new World();\nworld\n  .registerSystem(MovableSystem)\n  .registerSystem(RendererSystem);\n// Some helper functions when creating the components\nfunction getRandomVelocity() {\n  return {\n    x: SPEED_MULTIPLIER * (2 * Math.random() - 1),\n    y: SPEED_MULTIPLIER * (2 * Math.random() - 1),\n    angularVelocity: (2 * Math.random() - 1) * 0.00005,\n    damping: 0\n  };\n}\n// new Motion(\n//   ( Math.random() - 0.5 ) * 4 * ( 50 - radius ),\n//   ( Math.random() - 0.5 ) * 4 * ( 50 - radius ),\n//   Math.random() * 2 - 1,\n//   0\n// )\n\n\n// ctx.fillStyle= \"#000\";\n// ctx.fill();\n// ctx.lineWidth = 1;\n// ctx.strokeStyle = \"#800904\";\n// ctx.stroke();\n\n\n// var angle : Number = 0;\n// graphics.beginFill( 0xFFFFFF );\n// graphics.moveTo( radius, 0 );\n// while( angle < Math.PI * 2 )\n// {\n//   var length : Number = ( 0.75 + Math.random() * 0.25 ) * radius;\n//   var posX : Number = Math.cos( angle ) * length;\n//   var posY : Number = Math.sin( angle ) * length;\n//   graphics.lineTo( posX, posY );\n//   angle += Math.random() * 0.5;\n// }\n// graphics.lineTo( radius, 0 );\n// graphics.endFill();\n\nfunction getRandomPosition() {\n  return {\n    x: Math.random() * canvasWidth,\n    y: Math.random() * canvasHeight,\n    rotation: 0\n  };\n}\n\nfunction getRandomShape() {\n    return {\n      primitive: Math.random() >= 0.5 ? 'circle' : 'box'\n    };\n}\n\nfor (let i = 0; i < NUM_ELEMENTS; i++) {\n  world\n    .createEntity()\n    .addComponent(Motion, getRandomVelocity())\n    .addComponent(Shape, getRandomShape())\n    .addComponent(Position, getRandomPosition())\n    .addComponent(Renderable)\n}\n\n// Run!\nfunction run() {\n  // Compute delta and elapsed time\n  var time = performance.now();\n  var delta = time - lastTime;\n  // Run all the systems\n  world.execute(delta, time);\n  lastTime = time;\n  requestAnimationFrame(run);\n}\nvar lastTime = performance.now();\nrun();"],"names":["getName","Component","name","componentPropertyName","queryKey","Components","names","n","length","T","operator","push","sort","join","hasWindow","window","now","performance","bind","Date","EventDispatcher","this","_listeners","stats","fired","handled","addEventListener","eventName4","listener","listeners","undefined","indexOf","hasEventListener","eventName1","listener1","removeEventListener","eventName2","listener2","listenerArray","index","splice","dispatchEvent","eventName3","entity4","component1","array","slice","i","call","resetCounters","Query","constructor","manager","NotComponents","forEach","component","Error","entities","eventDispatcher","reactive","key","_entities","entity","match","queries","addEntity","entity1","prototype","ENTITY_ADDED","removeEntity","entity2","ENTITY_REMOVED","entity3","hasAllComponents","hasAnyComponents","toJSON","components","included","map","C","not","numEntities","numComponents","COMPONENT_CHANGED","System","canExecute","_mandatoryQueries","world5","attributes","world","enabled","_queries","priority","executeTime","initialized","queryName","queryConfig","query","entityManager","queryComponents","mandatory","results","validEvents","eventMapping","added","removed","changed","listen","eventName","execute","console","warn","event","eventList","Array","isArray","changedComponent","stop","play","clearEvents","json","queryDefinition","jsonQuery","method","Not","SystemManager","world1","_systems","_executeSystems","lastExecutedSystem","registerSystem","SystemClass","attributes1","getSystem","system","init","order","sortSystems","unregisterSystem","SystemClass1","a","b","SystemClass2","find","s","getSystems","removeSystem","SystemClass3","executeSystem","system1","delta","time","startTime","delta1","time1","forcePlay","numSystems","systems","systemStats","ctx","ObjectPool","initialSize","freeList","count","isObjectPool","extraArgs","arguments","shift","createElement","expand","acquire","Math","round","pop","release","item","reset","totalSize","totalFree","totalUsed","QueryManager","world2","_world","onEntityRemoved","onEntityComponentAdded","entity5","Component18","onEntityComponentRemoved","entity6","Component2","getQuery","Components1","SystemStateComponent","isSystemStateComponent","EntityManager","world3","componentsManager","_entitiesByNames","_queryManager","_entityPool","options","entityClass","entityPoolSize","entitiesWithComponentsToRemove","entitiesToRemove","deferredRemovalEnabled","getEntityByName","name1","createEntity","name2","alive","ENTITY_CREATED","entityAddComponent","entity7","Component3","values","_ComponentTypes","__proto__","numStateComponents","getComponentsPool","_components","copy","componentAddedToEntity","COMPONENT_ADDED","entityRemoveComponent","entity8","Component4","immediately","COMPONENT_REMOVE","_entityRemoveComponentSync","_ComponentTypesToRemove","componentName","_componentsToRemove","remove","entity9","Component5","propName","_componentPool","componentRemovedFromEntity","entityRemoveAllComponents","entity10","immediately1","j","entity11","immediately2","_releaseEntity","entity12","index1","removeAllEntities","processDeferredRemoval","i1","Components2","numQueries","Object","keys","numComponentPool","componentPool","cname","pool","used","size","DummyObjectPool","T1","isDummyObjectPool","Infinity","ComponentManager","registerComponent","Component6","Component7","Component8","Component9","name4","version","description","main","module","types","scripts","build","docs","dev","lint","start","test","travis","repository","type","url","keywords","author","license","bugs","ava","files","sources","require","jspm","directories","homepage","devDependencies","concurrently","eslint","nodemon","prettier","rollup","typedoc","typescript","pjson","Version1","nextId","Entity","world4","id","getComponent","Component10","includeRemoved","getRemovedComponent","Component11","getComponents","getComponentsToRemove","getComponentTypes","getMutableComponent","Component12","addComponent","Component13","values1","removeComponent","Component14","forceImmediate","hasComponent","Component15","includeRemoved1","hasRemovedComponent","Component16","Components3","Components4","removeAllComponents","forceImmediate1","forceImmediate2","DEFAULT_OPTIONS","World","assign","systemManager","eventQueues","CustomEvent","detail","lastTime","Component17","System1","attributes2","System2","SystemClass4","delta2","time2","name3","log","JSON","stringify","Component1","isComponent","TagComponent","createType","typeDefinition","undefinedFunctions","filter","f","isType","isTagComponent","Types","Number","baseType","isSimpleType","create","defaultValue","src","clear","Boolean","String","dst","standardTypes","number","boolean","string","inferType","value","createComponentClass","schema","key4","default","attr","defineProperty","knownTypes","key1","attr1","key3","key2","generateId","result","characters","charactersLength","charAt","floor","random","injectScript","onLoad","script","document","onload","head","documentElement","appendChild","hookConsoleAndErrors","connection","fn","args","send","apply","error","message","stack","includeRemoteIdHTML","remoteId","infoDiv","style","cssText","innerHTML","body","enableRemoteDevtools","generateNewCode","localStorage","setItem","location","reload","getItem","e","onWorldCreated","data","setAttribute","parentNode","removeChild","worldsBeforeLoading","Version","eval","returnEval","$a4b139810417fad1$export$13807d9ee5a34a42","$istpf","x","y","rotation","$466dd886a8d9da8b$export$ab7b018719e111db","angularVelocity","damping","$17a3975c051a5c82$var$NUM_ELEMENTS","$17a3975c051a5c82$var$SPEED_MULTIPLIER","$17a3975c051a5c82$var$SHAPE_SIZE","$17a3975c051a5c82$var$SHAPE_HALF_SIZE","$17a3975c051a5c82$var$canvas","querySelector","$17a3975c051a5c82$var$canvasWidth","width","innerWidth","$17a3975c051a5c82$var$canvasHeight","height","innerHeight","$17a3975c051a5c82$var$ctx","getContext","$17a3975c051a5c82$var$Shape","primitive","$17a3975c051a5c82$var$Renderable","$17a3975c051a5c82$var$MovableSystem","moving","motion","position","$17a3975c051a5c82$var$RendererSystem","globalAlpha","fillStyle","fillRect","renderables","shape","drawBox","drawSpaceship","save","translate","rotate","PI","strokeStyle","beginPath","moveTo","lineTo","stroke","closePath","restore","drawCircle","position1","arc","fill","lineWidth","position2","rect","$17a3975c051a5c82$var$world","$17a3975c051a5c82$var$getRandomVelocity","$17a3975c051a5c82$var$getRandomPosition","$17a3975c051a5c82$var$getRandomShape","$17a3975c051a5c82$var$run","$17a3975c051a5c82$var$lastTime","requestAnimationFrame"],"version":3,"file":"ecsy-example.35e87bfa.js.map"}